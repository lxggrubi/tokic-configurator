{"ast":null,"code":"var _jsxFileName = \"/Users/leongrubisic/Documents/react/tokic-configurator/src/components/manufacturer_modal/manufacturerModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ManufacturerModal() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const radios = [{\n    name: \"Peugeot\",\n    value: \"Peugeot\"\n  }, {\n    name: \"Bar\",\n    value: \"bar\"\n  }, {\n    name: \"Baz\",\n    value: \"baz\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-secondary btn-sm px-4\",\n      onClick: handleShow,\n      children: \"Pokreni konfigurator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Konfigurator servisa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n            toggle: true,\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n              type: \"checkbox\",\n              checked: checked,\n              value: \"1\",\n              onChange: e => setChecked(e.currentTarget.checked),\n              children: \"Checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            toggle: true,\n            children: radios.map((radio, index) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              type: \"radio\",\n              name: \"radio\",\n              value: radio.value,\n              checked: radioValue === radio.value,\n              onChange: e => setRadioValue(e.currentTarget.value),\n              children: radio.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ManufacturerModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ManufacturerModal;\nexport default ManufacturerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManufacturerModal\");","map":{"version":3,"sources":["/Users/leongrubisic/Documents/react/tokic-configurator/src/components/manufacturer_modal/manufacturerModal.js"],"names":["React","useEffect","useState","Form","Modal","Button","ManufacturerModal","show","setShow","handleClose","handleShow","radios","name","value","checked","e","setChecked","currentTarget","map","radio","index","radioValue","setRadioValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\n\nfunction ManufacturerModal() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const radios = [\n    { name: \"Peugeot\", value: \"Peugeot\" },\n    { name: \"Bar\", value: \"bar\" },\n    { name: \"Baz\", value: \"baz\" }\n  ];\n\n  return (\n    <>\n    <button type=\"button\" class=\"btn btn-outline-secondary btn-sm px-4\" onClick={handleShow}>Pokreni konfigurator</button>\n\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Konfigurator servisa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form>\n        <ButtonGroup toggle className=\"mb-2\">\n      <ToggleButton\n        type=\"checkbox\"\n        checked={checked}\n        value=\"1\"\n        onChange={e => setChecked(e.currentTarget.checked)}\n      >\n        Checkbox\n      </ToggleButton>\n    </ButtonGroup>\n    <br />\n    <ButtonGroup toggle>\n      {radios.map((radio, index) => (\n        <ToggleButton\n          key={index}\n          type=\"radio\"\n          name=\"radio\"\n          value={radio.value}\n          checked={radioValue === radio.value}\n          onChange={e => setRadioValue(e.currentTarget.value)}\n        >\n          {radio.name}\n        </ToggleButton>\n      ))}\n    </ButtonGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>Next</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ManufacturerModal;\n"]},"metadata":{},"sourceType":"module"}